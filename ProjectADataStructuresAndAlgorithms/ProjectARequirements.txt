Project A for Data Structures and Algorithms

For Project A, the requirements are to...

- Use Generics to create a Java class called Trio that represents a group of three items.

Project Description: 
- A Trio is a class representing a data structure that holds a group of three items. A Trio object has the following characteristics: 
* Trios hold three items of the same type.
* For example, a Trio could hold three integers or it could hold three Strings or it could hold three Students, etc...A Trio could not, however, hold two integers and a String.
* A Trio can contain duplicates.
* A Trio’s items are unordered.
* Meaning, the order doesn’t matter.
* For example, the Trio (3,4,5) is considered the same as the Trio (4,5,3) and the Trio (“hi”, “bye”, “hello”) is considered the same as the Trio (“hello”, “hi”, “bye”).

Project Requirements: 
- The class header should look like this:     public class Trio<T>
- Your class must compile, use generics, and have the following:
* Instance data variables to store the three items contained in the Trio.
* Two constructors:
- One constructor takes in the three items as parameters.
- A second constructor takes in a single item and the Trio will then consist of three of these items.
- Note: Reduce duplicated code in the constructors.

Additional requirements include:
* Getters and Setters for each item in the trio.
* A toString method that returns a text representation of the trio.
* A method called reset that takes in one item as a parameter and modifies the Trio to hold three of that item.
* A method called count that takes in an item and returns a count of how many times that item is in the Trio.
* A method called hasDuplicates that returns true if at least two items within the Trio are the same as each other.
- Note: This does not determine duplicates based on whether any of the items are aliases, but whether any of the items are equal (logically equivalent to each other).
* Add an equals method that overrides the equals method of the Object class. The method returns true if the current Trio holds the same (logically equivalent) three items in any order as the Trio is sent as a parameter and false otherwise.
- Note: The method should not alter either the current Trio object or the Trio object passed in as a parameter. The method should work correctly when the Trios hold duplicates. The method should ignore the order of the three elements. 
